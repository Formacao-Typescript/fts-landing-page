---
import Credits from '../components/Credits.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="/normalize.css" />
    <link
      href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Red+Hat+Mono:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <main>
      <slot />
    </main>
    <Credits />
  </body>
</html>
<style is:global lang="scss">
  :root {
    --blue-dark: #0165fc;
    --blue-light: #01c4fb;
    --blue-gradient: linear-gradient(105.87deg, #01c4fb 0.1%, #0165fc 77.77%);
    --white: #ffffff;
    --blue-box-shadow: 0px 4px 70.9px 0px #0266fc80;
    --green-box-shadow: 0px 4px 70.9px 0px #00a27780;
    --green-medium: #00a277;
    --green-15: #00a27726;
    --gray-900: #09090a;
    --gray-800: #121214;
    --gray-700: #383838;
    --gray-500: #919191;
  }

  html,
  body {
    font-family: 'Plus Jakarta Sans';
    // background-color: var(--gray-700);
    background: #09090a;
    overflow-x: hidden;
    scroll-behavior: smooth !important;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    position: relative;
  }

  * {
    box-sizing: border-box;
  }

  body {
    display: flex;
    justify-content: center;
    & > main {
      max-width: 1380px;
    }

    h1,
    h2,
    h3,
    h4 {
      font-family: 'Plus Jakarta Sans';
      color: var(--gray-800);
      font-weight: 400;
      color: var(--white);
    }

    h1 {
      font-size: 64px;
      line-height: 76.8px;
      text-align: center;
    }

    h2 {
      font-size: 48px;
      line-height: 57.6px;
      text-align: left;
    }

    h3 {
      font-size: 32px;
      line-height: 38.4px;
      text-align: left;
    }

    h4 {
      font-size: 24px;
      line-height: 30.24px;
      text-align: left;
    }

    .bold {
      font-weight: 600;
    }

    p {
      font-family: 'Plus Jakarta Sans';
      color: var(--gray-500);
      font-weight: 400;
      text-align: left;

      &.body-24 {
        font-size: 24px;
        line-height: 36px;
      }

      &.body-20 {
        font-size: 20px;
        line-height: 30px;
      }

      &.body-16 {
        font-size: 16px;
        line-height: 24px;
      }
    }

    .interactable {
      cursor: pointer;
      transition: transform 0.2s ease-in-out;
      &:hover,
      &:focus {
        opacity: 0.9;
        transform: scale(1.1);
      }
    }

    .text-gradient {
      background: var(--blue-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-fill-color: transparent;
    }
  }
</style>

<script>
  function calculateZoom() {
    const idealWidth = 1380;
    const actualWidth = window.innerWidth;

    if (actualWidth > 900 && actualWidth < 1800) {
      const zoomLevel = actualWidth / idealWidth;
      document.body.style.zoom = String(zoomLevel);
      return zoomLevel; // Return the zoom level for reference
    } else {
      document.body.style.zoom = '1'; // Reset to normal zoom if outside the specified range
      return 1; // Return normal zoom level
    }
  }

  window.onload = calculateZoom;

  window.onresize = calculateZoom;
</script>

<!-- <script>
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('a[href^="#"]');

    links.forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        const targetId = link.getAttribute('href');
        const targetElement = document.querySelector(targetId);

        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start',
          });
        }
      });
    });
  });
</script> -->
